apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: cleanup-runs
  labels:
    project: tealc
spec:
  params:
    - name: namespace
      description: Namespace to cleanup to in the target cluster
    - name: clusterResource
      description: Name of the cluster resource that points to the target cluster
    - name: keep
      description: Amount of old resources to keep
      default: "200"
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: TaskRun
      metadata:
        name: cleanup-runs-$(tt.params.namespace)-$(uid)
        labels:
          project: tealc
      spec:
        serviceAccountName: pipeline
        taskSpec:
          params:
            - name: keep
            - name: namespace
          steps:
            - name: cleanup-pr-tr
              image: gcr.io/tekton-releases/dogfooding/tkn
              script: |
                #!/bin/sh
                set -ex
                # A safety check, to avoid deleting too much!
                if [[ $(params.keep) -eq 0 || $(params.keep) == "" ]]; then
                  echo "This task cannot be used to delete *all* resources from a cluster" >&2
                  echo "Please specifcy a value for keep > 0"
                  exit 1
                fi
                # Cleanup pipelineruns first, as this will delete tasksruns too
                tkn pr delete -n $(params.namespace) --keep $(params.keep)
                # Keep double the amount of tr, for standalone trs
                tkn tr delete -n $(params.namespace) --keep $(( $(params.keep) / 4 ))
        params:
          - name: keep
            value: $(tt.params.keep)
          - name: namespace
            value: $(tt.params.namespace)
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: cleanup-details
  labels:
    project: tealc
spec:
  params:
    - name: keep
      value: $(body.params.cleanup.keep)
    - name: namespace
      value: $(body.params.target.namespace)

---
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: tekton-cleaner
  labels:
    project: tealc
spec:
  serviceAccountName: pipeline
  triggers:
    - name: cleanup
      interceptors:
        - cel:
            filter: >-
              'trigger-template' in body &&
              body['trigger-template'] == 'cleanup'
      bindings:
        - ref: cleanup-details
      template:
        ref: cleanup-runs

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cleanup-trigger
  labels:
    project: tealc
spec:
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 1
  concurrencyPolicy: Replace
  schedule: "*/15 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          volumes:
            - name: workspace
              emptyDir: {}
          containers:
            - name: trigger
              image: quay.io/rh_integration/strimzi-tools:latest
              command:
                - /bin/sh
              args:
                - -ce
                - |
                  cat <<EOF > /workspace/post-body.json
                  {
                    "trigger-template": "cleanup",
                    "params": {
                      "target": {
                        "namespace": "$NAMESPACE"
                      },
                      "cleanup": {
                          "keep": "$CLEANUP_KEEP"
                      }
                    }
                  }
                  EOF
                  curl -d @/workspace/post-body.json $SINK_URL
              volumeMounts:
                - mountPath: /workspace
                  name: workspace
              env:
                - name: SINK_URL
                  value: "el-tekton-cleaner.tealc.svc.cluster.local:8080"
                - name: NAMESPACE
                  value: "tealc"
                - name: CLEANUP_KEEP
                  value: "16"
          restartPolicy: Never