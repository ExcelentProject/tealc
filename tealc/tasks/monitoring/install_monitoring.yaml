---
- name: Create monitoring namespace on Infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    name: "{{ infra_monitoring_namespace }}"
    api_version: v1
    kind: Namespace
    state: present
  when:
    - '"admin-access" in ansible_run_tags'

- name: Create monitoring namespaces on Worker clusters
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ worker.name }}"
    name: "{{ worker.monitoring_namespace }}"
    api_version: v1
    kind: Namespace
    state: present
  loop: "{{ workers }}"
  loop_control:
    loop_var: worker
  

- name: Enable user-workload on infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "openshift-monitoring"
    state: present
    src: files/user-workload-cm.yaml
  when:
    - '"admin-access" in ansible_run_tags'

- name: Enable user-workload on worker cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ worker.name }}"
    namespace: "openshift-monitoring"
    state: present
    src: files/user-workload-cm.yaml
  loop: "{{ workers }}"
  loop_control:
    loop_var: worker

- name: Create image pull secret on infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ infra_monitoring_namespace }}"
    state: present
    src: "{{ grafana_docker_secret_path }}"
  when:
    - '"admin-access" in ansible_run_tags'

- name: Create image pull secret on worker cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ worker.name }}"
    namespace: "{{ worker.monitoring_namespace }}"
    state: present
    src: "{{ grafana_docker_secret_path }}"
  loop: "{{ workers }}"
  loop_control:
    loop_var: worker

- name: Create grafana session secret on infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ infra_monitoring_namespace }}"
    state: present
    src: "{{ grafana_session_secret_path }}"
  when:
    - '"admin-access" in ansible_run_tags'

- name: Create grafana session secret on worker cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ worker.name }}"
    namespace: "{{ worker.monitoring_namespace }}"
    state: present
    src: "{{ grafana_session_secret_path }}"
  loop: "{{ workers }}"
  loop_control:
    loop_var: worker

- name: Sleep for 10 seconds and continue with play
  wait_for:
    timeout: 10
  when: not is_kubernetes

- name: Setup Grafana access on Infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ infra_monitoring_namespace }}"
    state: present
    template: templates/grafana/grafana-setup.yaml.j2
  when:
    - '"admin-access" in ansible_run_tags'

- name: Setup Grafana access on Worker clusters
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ worker.name }}"
    namespace: "{{ worker.monitoring_namespace }}"
    state: present
    template: templates/grafana/grafana-setup.yaml.j2
  loop: "{{ workers }}"
  loop_control:
    loop_var: worker

- name: Install Grafana operator on Infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ infra_monitoring_namespace }}"
    state: present
    template: templates/grafana/grafana-operator.yaml.j2
  when:
    - '"admin-access" in ansible_run_tags'

- name: Install Grafana operator on Worker clusters
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ worker.name }}"
    namespace: "{{ worker.monitoring_namespace }}"
    state: present
    template: templates/grafana/grafana-operator.yaml.j2
  loop: "{{ workers }}"
  loop_control:
    loop_var: worker

- name: Sleep for 20 seconds and continue with play
  wait_for:
    timeout: 20

- name: Wait for Grafana operator on Infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ infra_monitoring_namespace }}"
    kind: Deployment
    name: grafana-operator-controller-manager
    wait: true
    wait_condition:
      type: Available
      status: True
      reason: MinimumReplicasAvailable
  when:
    - '"admin-access" in ansible_run_tags'

- name: Wait for Grafana operator Worker clusters
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ worker.name }}"
    namespace: "{{ worker.monitoring_namespace }}"
    kind: Deployment
    name: grafana-operator-controller-manager
    wait: true
    wait_condition:
      type: Available
      status: True
      reason: MinimumReplicasAvailable
  loop: "{{ workers }}"
  loop_control:
    loop_var: worker

- name: Deploy Grafana instance on Infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ infra_monitoring_namespace }}"
    state: present
    template: templates/grafana/grafana.yaml.j2
  when:
    - '"admin-access" in ansible_run_tags'

- name: Deploy Grafana instance on Worker clusters
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ worker.name }}"
    namespace: "{{ worker.monitoring_namespace }}"
    state: present
    template: templates/grafana/grafana.yaml.j2
  loop: "{{ workers }}"
  loop_control:
    loop_var: worker

- name: Create grafana route on infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ infra_monitoring_namespace }}"
    state: present
    src: files/grafana/grafana-route.yaml
  when:
    - '"admin-access" in ansible_run_tags'

- name: Create grafana route on worker cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ worker.name }}"
    namespace: "{{ worker.monitoring_namespace }}"
    state: present
    src: files/grafana/grafana-route.yaml
  loop: "{{ workers }}"
  loop_control:
    loop_var: worker

- name: Create data-sources on Infra cluster
  include_tasks: deploy-data-source.yaml
  loop:
    - {name: "{{ infra_context_name }}", monitoring_namespace: "{{ infra_monitoring_namespace }}"}
  loop_control:
    loop_var: target
  when:
    - '"admin-access" in ansible_run_tags'

- name: Create data-sources on Worker clusters
  include_tasks: deploy-data-source.yaml
  loop: "{{ workers }}"
  loop_control:
    loop_var: target

- name: Configure Alertmanager to for sending alerts on Infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    state: present
    template: templates/alert-manager-configuration.yaml.j2
  when:
    - '"admin-access" in ansible_run_tags'

- name: Configure Alertmanager to for sending alerts on Worker clusters
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ worker.name }}"
    state: present
    template: templates/alert-manager-configuration.yaml.j2
  loop: "{{ workers }}"
  loop_control:
    loop_var: worker

- name: Configure Grafana dashboards and Prometheus alerts
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ infra_monitoring_namespace }}"
    state: present
    src: "files/argo/metrics/{{ item }}"
  loop:
    - argo-dashboard-cm.yaml
    - grafana-argo-dashboards.yaml
  when:
    - '"admin-access" in ansible_run_tags'

- name: Configure Prometheus alerts
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ infra_argo_namespace }}"
    state: present
    src: "files/argo/metrics/{{ item }}"
  loop:
    - alerts.yaml
  when:
    - '"admin-access" in ansible_run_tags'